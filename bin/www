#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app=require("../modules/app");
// var app = require('../app');
var debug = require('debug')('testmoudule:server');
var http = require('http');
var os=require('os');
var cluster=require('cluster');
/**
 * Get port from environment and store in Express.
 */

var port = (process.env.PORT || '4000');
app.set('port', port);
console.log("输出cpu",os.cpus().length);
var numCPUs=os.cpus().length;
if (cluster.isMaster&&false) {
  for (var i = 0; i < numCPUs; i++) {
    cluster.fork();
  }

  cluster.on("exit", function(worker, code, signal) {
    console.log('输出id',worker.id,JSON.stringify(worker));
    // cluster.fork();
  });
} else {
  // http.createServer(function(request, response) {
  //   console.log("Request for:  " + request.url);
  //   response.writeHead(200);
  //   response.end("hello world\n");
  // }).listen(port);
  var server=app.listen(app.get("port"),function () {
  console.info("输出端口",server.address().port);
})
}


console.info("http://localhost:"+app.get("port"));
/**
 * Create HTTP server.
 */

// var server = http.createServer(app);

/**
 * Listen on provided port, on all network interfaces.
 */
//
// server.listen(port);
// server.on('error', onError);
// server.on('listening', onListening);

/**
 * Normalize a port into a number, string, or false.
 */

